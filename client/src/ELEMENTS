import React, { useEffect, useRef } from "react";

export function EthCube() {
  const cubeRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    if (cubeRef.current) {
      let animationId: number;
      const animate = () => {
        if (cubeRef.current) {
          const time = Date.now() * 0.001;
          const rotateX = Math.sin(time) * 10;
          const rotateY = time * 20;
          cubeRef.current.style.transform = `rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;
        }
        animationId = requestAnimationFrame(animate);
      };
      animate();
      
      return () => {
        if (animationId) {
          cancelAnimationFrame(animationId);
        }
      };
    }
  }, []);

  return (
    <div className="relative h-96 flex items-center justify-center perspective-1000 overflow-hidden">
      {/* Main Ethereum Cube */}
      <div 
        ref={cubeRef}
        className="w-20 h-20 relative"
        style={{ transformStyle: 'preserve-3d' }}
      >
        {/* Cube faces with Ethereum logo */}
        <div className="absolute w-20 h-20 border-2 border-blue-400 bg-gradient-to-br from-blue-500/20 to-purple-600/20 flex items-center justify-center" 
             style={{ transform: 'rotateY(0deg) translateZ(40px)' }}>
          <i className="fab fa-ethereum text-blue-300 text-2xl"></i>
        </div>
        <div className="absolute w-20 h-20 border-2 border-blue-400 bg-gradient-to-br from-blue-500/20 to-purple-600/20 flex items-center justify-center" 
             style={{ transform: 'rotateY(180deg) translateZ(40px)' }}>
          <i className="fab fa-ethereum text-blue-300 text-2xl"></i>
        </div>
        <div className="absolute w-20 h-20 border-2 border-blue-400 bg-gradient-to-br from-blue-500/20 to-purple-600/20 flex items-center justify-center" 
             style={{ transform: 'rotateY(90deg) translateZ(40px)' }}>
          <i className="fab fa-ethereum text-blue-300 text-2xl"></i>
        </div>
        <div className="absolute w-20 h-20 border-2 border-blue-400 bg-gradient-to-br from-blue-500/20 to-purple-600/20 flex items-center justify-center" 
             style={{ transform: 'rotateY(-90deg) translateZ(40px)' }}>
          <i className="fab fa-ethereum text-blue-300 text-2xl"></i>
        </div>
        <div className="absolute w-20 h-20 border-2 border-blue-400 bg-gradient-to-br from-blue-500/20 to-purple-600/20 flex items-center justify-center" 
             style={{ transform: 'rotateX(90deg) translateZ(40px)' }}>
          <i className="fab fa-ethereum text-blue-300 text-2xl"></i>
        </div>
        <div className="absolute w-20 h-20 border-2 border-blue-400 bg-gradient-to-br from-blue-500/20 to-purple-600/20 flex items-center justify-center" 
             style={{ transform: 'rotateX(-90deg) translateZ(40px)' }}>
          <i className="fab fa-ethereum text-blue-300 text-2xl"></i>
        </div>
      </div>

      {/* Floating dev tools */}
      <div className="absolute inset-0 pointer-events-none">
        <div className="floating-icon" style={{ top: '20%', left: '15%', animationDelay: '0s' }}>
          <i className="fab fa-js-square text-yellow-400 text-2xl"></i>
        </div>
        <div className="floating-icon" style={{ top: '60%', right: '20%', animationDelay: '2s' }}>
          <i className="fab fa-python text-blue-400 text-2xl"></i>
        </div>
        <div className="floating-icon" style={{ bottom: '25%', left: '25%', animationDelay: '4s' }}>
          <i className="fab fa-golang text-cyan-400 text-2xl"></i>
        </div>
        <div className="floating-icon" style={{ top: '30%', right: '30%', animationDelay: '1s' }}>
          <i className="fas fa-robot text-green-400 text-2xl"></i>
        </div>
        <div className="floating-icon" style={{ bottom: '40%', right: '15%', animationDelay: '3s' }}>
          <i className="fas fa-chart-line text-orange-400 text-2xl"></i>
        </div>
      </div>

      {/* Particle effects */}
      <div className="absolute inset-0 pointer-events-none">
        {Array.from({ length: 15 }).map((_, i) => (
          <div
            key={i}
            className="particle"
            style={{
              top: `${Math.random() * 100}%`,
              left: `${Math.random() * 100}%`,
              animationDelay: `${Math.random() * 3}s`,
              animationDuration: `${3 + Math.random() * 2}s`
            }}
          />
        ))}
      </div>
    </div>
  );
}

export function IndEtherLogo({ size = "md" }: { size?: "sm" | "md" | "lg" }) {
  const sizeClasses = {
    sm: "w-6 h-6",
    md: "w-8 h-8", 
    lg: "w-12 h-12"
  };

  return (
    <div className={`${sizeClasses[size]} relative`}>
      <div className="absolute inset-0 bg-gradient-to-br from-saffron to-saffron-dark rounded-lg flex items-center justify-center">
        <i className="fab fa-ethereum text-white text-lg"></i>
      </div>
      <div className="absolute -top-1 -right-1 w-3 h-3 bg-gradient-to-br from-india-green to-india-green-dark rounded-full"></div>
    </div>
  );
}
